{"ast":null,"code":"import { parseHeaders } from \"./parseHeaders\";\nconst url = \"https://www.anapioficeandfire.com/api/characters?page=1&pageSize=50\";\n\nconst doFetch = async url => {\n  try {\n    const response = await fetch(url);\n    const characters = await response.json();\n    const headerLinks = parseHeaders(response);\n    const nextUrl = headerLinks.next;\n\n    if (nextUrl) {\n      const newCharacters = await doFetch(nextUrl);\n      characters.push(...newCharacters);\n    }\n\n    return characters;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchCharacters = async () => {\n  try {\n    return await doFetch(url);\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"sources":["/home/tizzle/Desktop/ANAPIOFICEANDFIRE/src/utils/fetchCharacters.ts"],"names":["parseHeaders","url","doFetch","response","fetch","characters","json","headerLinks","nextUrl","next","newCharacters","push","error","fetchCharacters"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,MAAMC,GAAG,GACP,qEADF;;AAGA,MAAMC,OAAO,GAAG,MAAOD,GAAP,IAAuB;AACrC,MAAI;AACF,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;AACA,UAAMI,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AAEA,UAAMC,WAAW,GAAGP,YAAY,CAACG,QAAD,CAAhC;AACA,UAAMK,OAAO,GAAGD,WAAW,CAACE,IAA5B;;AAEA,QAAID,OAAJ,EAAa;AACX,YAAME,aAAa,GAAG,MAAMR,OAAO,CAACM,OAAD,CAAnC;AACAH,MAAAA,UAAU,CAACM,IAAX,CAAgB,GAAGD,aAAnB;AACD;;AAED,WAAOL,UAAP;AACD,GAbD,CAaE,OAAOO,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF,CAjBD;;AAmBA,OAAO,MAAMC,eAAe,GAAG,YAAY;AACzC,MAAI;AACF,WAAO,MAAMX,OAAO,CAACD,GAAD,CAApB;AACD,GAFD,CAEE,OAAOW,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF,CANM","sourcesContent":["import { parseHeaders } from \"./parseHeaders\";\n\nconst url =\n  \"https://www.anapioficeandfire.com/api/characters?page=1&pageSize=50\";\n\nconst doFetch = async (url: string) => {\n  try {\n    const response = await fetch(url);\n    const characters = await response.json();\n\n    const headerLinks = parseHeaders(response);\n    const nextUrl = headerLinks.next;\n\n    if (nextUrl) {\n      const newCharacters = await doFetch(nextUrl);\n      characters.push(...newCharacters);\n    }\n\n    return characters;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchCharacters = async () => {\n  try {\n    return await doFetch(url);\n  } catch (error) {\n    throw error;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}