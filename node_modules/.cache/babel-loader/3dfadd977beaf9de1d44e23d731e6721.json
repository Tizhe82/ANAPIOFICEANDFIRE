{"ast":null,"code":"import moment from \"moment\";\nexport const searchHelper = paramsObj => {\n  const {\n    filter,\n    books,\n    searchQuery,\n    characters\n  } = paramsObj;\n\n  if (filter === \"released\") {\n    return books.filter(book => moment(moment(book[\"released\"]).format(\"YYYY-MM-DD\")).isSame(searchQuery));\n  }\n\n  if (filter === \"authors\") {\n    return books.filter(book => book.authors.some(author => author.toLowerCase().includes(searchQuery.toLowerCase())));\n  }\n\n  if (filter === \"characters\" || filter === \"culture\") {\n    let key = \"culture\";\n    if (filter === \"characters\") key = \"name\";\n    const queryCharacters = characters.filter(character => character[key].toLowerCase() === searchQuery.toLowerCase());\n    return books.filter(book => queryCharacters.some(queryCharacter => queryCharacter.books.some(bookUrl => bookUrl === book.url)));\n  }\n\n  return books.filter(book => book[filter].toLowerCase().includes(searchQuery.toLowerCase()));\n};","map":{"version":3,"sources":["/home/tizzle/Desktop/ice-and-fire/src/utils/searchHelper.ts"],"names":["moment","searchHelper","paramsObj","filter","books","searchQuery","characters","book","format","isSame","authors","some","author","toLowerCase","includes","key","queryCharacters","character","queryCharacter","bookUrl","url"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AASA,OAAO,MAAMC,YAAY,GAAIC,SAAD,IAAkC;AAC5D,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA;AAA9B,MAA6CJ,SAAnD;;AAEA,MAAIC,MAAM,KAAK,UAAf,EAA2B;AACzB,WAAOC,KAAK,CAACD,MAAN,CAAcI,IAAD,IAClBP,MAAM,CAACA,MAAM,CAACO,IAAI,CAAC,UAAD,CAAL,CAAN,CAAyBC,MAAzB,CAAgC,YAAhC,CAAD,CAAN,CAAsDC,MAAtD,CAA6DJ,WAA7D,CADK,CAAP;AAGD;;AAED,MAAIF,MAAM,KAAK,SAAf,EAA0B;AACxB,WAAOC,KAAK,CAACD,MAAN,CAAcI,IAAD,IAClBA,IAAI,CAACG,OAAL,CAAaC,IAAb,CAAmBC,MAAD,IAChBA,MAAM,CAACC,WAAP,GAAqBC,QAArB,CAA8BT,WAAW,CAACQ,WAAZ,EAA9B,CADF,CADK,CAAP;AAKD;;AAED,MAAIV,MAAM,KAAK,YAAX,IAA2BA,MAAM,KAAK,SAA1C,EAAqD;AACnD,QAAIY,GAAkB,GAAG,SAAzB;AACA,QAAIZ,MAAM,KAAK,YAAf,EAA6BY,GAAG,GAAG,MAAN;AAE7B,UAAMC,eAAe,GAAGV,UAAU,CAACH,MAAX,CACrBc,SAAD,IAAeA,SAAS,CAACF,GAAD,CAAT,CAAeF,WAAf,OAAiCR,WAAW,CAACQ,WAAZ,EAD1B,CAAxB;AAIA,WAAOT,KAAK,CAACD,MAAN,CAAcI,IAAD,IAClBS,eAAe,CAACL,IAAhB,CAAsBO,cAAD,IACnBA,cAAc,CAACd,KAAf,CAAqBO,IAArB,CAA2BQ,OAAD,IAAaA,OAAO,KAAKZ,IAAI,CAACa,GAAxD,CADF,CADK,CAAP;AAKD;;AAED,SAAOhB,KAAK,CAACD,MAAN,CAAcI,IAAD,IAClBA,IAAI,CAACJ,MAAD,CAAJ,CAAaU,WAAb,GAA2BC,QAA3B,CAAoCT,WAAW,CAACQ,WAAZ,EAApC,CADK,CAAP;AAGD,CAnCM","sourcesContent":["import moment from \"moment\";\n\ntype searchHelperTypes = {\n  books: BookTypes[];\n  filter: BookKeys;\n  searchQuery: string;\n  characters: CharacterTypes[];\n};\n\nexport const searchHelper = (paramsObj: searchHelperTypes) => {\n  const { filter, books, searchQuery, characters } = paramsObj;\n\n  if (filter === \"released\") {\n    return books.filter((book) =>\n      moment(moment(book[\"released\"]).format(\"YYYY-MM-DD\")).isSame(searchQuery)\n    );\n  }\n\n  if (filter === \"authors\") {\n    return books.filter((book) =>\n      book.authors.some((author) =>\n        author.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n    );\n  }\n\n  if (filter === \"characters\" || filter === \"culture\") {\n    let key: CharacterKeys = \"culture\";\n    if (filter === \"characters\") key = \"name\";\n\n    const queryCharacters = characters.filter(\n      (character) => character[key].toLowerCase() === searchQuery.toLowerCase()\n    );\n\n    return books.filter((book) =>\n      queryCharacters.some((queryCharacter) =>\n        queryCharacter.books.some((bookUrl) => bookUrl === book.url)\n      )\n    );\n  }\n\n  return books.filter((book) =>\n    book[filter].toLowerCase().includes(searchQuery.toLowerCase())\n  );\n};\n"]},"metadata":{},"sourceType":"module"}