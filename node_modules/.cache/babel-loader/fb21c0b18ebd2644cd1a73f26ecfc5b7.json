{"ast":null,"code":"var _jsxFileName = \"/home/tizzle/Desktop/ice-and-fire/src/components/books/Books.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport BookLists from \"./BookLists\";\nimport NextLoading from \"../common/NextLoading\";\nimport InitialLoading from \"../common/InitialLoading\";\nimport Error from \"../common/Error\";\nimport Header from \"../header/Header\";\nimport { fetchBooks } from \"../../utils/fetchBooks\";\nimport { parseHeaders } from \"../../utils/parseHeaders\";\nimport { fetchCharacters } from \"../../utils/fetchCharacters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Books = () => {\n  _s();\n\n  const url = \"https://www.anapioficeandfire.com/api/books?page=1&pageSize=6\";\n  const [books, setBooks] = React.useState([]);\n  const [characters, setCharacters] = React.useState([]);\n  const [nextUrl, setNextUrl] = React.useState(\"\");\n  const [initialLoading, setInitialLoading] = React.useState(true);\n  const [initialError, setInitialError] = React.useState(false);\n  const [, setNextLoading] = React.useState(false);\n  const [nextError, setNextError] = React.useState(false);\n  React.useEffect(() => {\n    const fetchInitBooks = async url => {\n      setInitialError(false);\n\n      try {\n        const response = await fetchBooks(url);\n        const books = await response.json();\n        const headerLinks = parseHeaders(response);\n        const characters = await fetchCharacters();\n        setBooks(books);\n        setCharacters(characters);\n        setNextUrl(headerLinks.next);\n      } catch (error) {\n        setInitialError(true);\n      }\n\n      setInitialLoading(false);\n    };\n\n    if (initialLoading) fetchInitBooks(url);\n  }, [initialLoading]);\n\n  const fetchNextBooks = async url => {\n    setNextLoading(true);\n    setNextError(false);\n\n    try {\n      const response = await fetchBooks(url);\n      const headerLinks = parseHeaders(response);\n      const data = await response.json();\n      setBooks(books.concat(data));\n      setNextUrl(headerLinks.next);\n    } catch (error) {\n      setNextError(true);\n    }\n\n    setNextLoading(false);\n  };\n\n  const handleFetchNextBooks = () => {\n    if (nextUrl) {\n      fetchNextBooks(nextUrl);\n    }\n  };\n\n  const handleInitialTryAgain = () => {\n    setInitialLoading(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    my: \"8\",\n    marginX: \"auto\",\n    maxW: \"1300px\",\n    px: \"4\",\n    children: initialLoading ? /*#__PURE__*/_jsxDEV(InitialLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: initialError ? /*#__PURE__*/_jsxDEV(Error, {\n        onTryAgain: handleInitialTryAgain,\n        text: \"Something went wrong trying to connect to the API endpoint. Please check your internet connection and try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          books: books,\n          characters: characters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          scrollThreshold: 1,\n          dataLength: books.length,\n          next: handleFetchNextBooks,\n          hasMore: nextUrl ? true : false,\n          loader: !nextError && /*#__PURE__*/_jsxDEV(NextLoading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 39\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(BookLists, {\n            books: books,\n            onTryAgain: handleFetchNextBooks,\n            nextError: nextError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Books, \"U2RV4vgvd8d7aSb1yhKibxBGF24=\");\n\n_c = Books;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["/home/tizzle/Desktop/ice-and-fire/src/components/books/Books.tsx"],"names":["React","Box","InfiniteScroll","BookLists","NextLoading","InitialLoading","Error","Header","fetchBooks","parseHeaders","fetchCharacters","Books","url","books","setBooks","useState","characters","setCharacters","nextUrl","setNextUrl","initialLoading","setInitialLoading","initialError","setInitialError","setNextLoading","nextError","setNextError","useEffect","fetchInitBooks","response","json","headerLinks","next","error","fetchNextBooks","data","concat","handleFetchNextBooks","handleInitialTryAgain","length"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport BookLists from \"./BookLists\";\nimport NextLoading from \"../common/NextLoading\";\nimport InitialLoading from \"../common/InitialLoading\";\nimport Error from \"../common/Error\";\nimport Header from \"../header/Header\";\nimport { fetchBooks } from \"../../utils/fetchBooks\";\nimport { parseHeaders } from \"../../utils/parseHeaders\";\nimport { fetchCharacters } from \"../../utils/fetchCharacters\";\n\nconst Books = () => {\n  const url = \"https://www.anapioficeandfire.com/api/books?page=1&pageSize=6\";\n\n  const [books, setBooks] = React.useState<BookTypes[]>([]);\n  const [characters, setCharacters] = React.useState<CharacterTypes[]>([]);\n  const [nextUrl, setNextUrl] = React.useState(\"\");\n\n  const [initialLoading, setInitialLoading] = React.useState(true);\n  const [initialError, setInitialError] = React.useState(false);\n  const [, setNextLoading] = React.useState(false);\n  const [nextError, setNextError] = React.useState(false);\n\n  React.useEffect(() => {\n    const fetchInitBooks = async (url: string) => {\n      setInitialError(false);\n\n      try {\n        const response = await fetchBooks(url);\n        const books = await response.json();\n        const headerLinks = parseHeaders(response);\n\n        const characters = await fetchCharacters();\n\n        setBooks(books);\n        setCharacters(characters);\n        setNextUrl(headerLinks.next);\n      } catch (error) {\n        setInitialError(true);\n      }\n\n      setInitialLoading(false);\n    };\n\n    if (initialLoading) fetchInitBooks(url);\n  }, [initialLoading]);\n\n  const fetchNextBooks = async (url: string) => {\n    setNextLoading(true);\n    setNextError(false);\n\n    try {\n      const response = await fetchBooks(url);\n      const headerLinks = parseHeaders(response);\n      const data = await response.json();\n\n      setBooks(books.concat(data));\n      setNextUrl(headerLinks.next);\n    } catch (error) {\n      setNextError(true);\n    }\n\n    setNextLoading(false);\n  };\n\n  const handleFetchNextBooks = () => {\n    if (nextUrl) {\n      fetchNextBooks(nextUrl);\n    }\n  };\n\n  const handleInitialTryAgain = () => {\n    setInitialLoading(true);\n  };\n\n  return (\n    <Box my=\"8\" marginX=\"auto\" maxW=\"1300px\" px=\"4\">\n      {initialLoading ? (\n        <InitialLoading />\n      ) : (\n        <>\n          {initialError ? (\n            <Error\n              onTryAgain={handleInitialTryAgain}\n              text=\"Something went wrong trying to connect to the API endpoint. Please check your internet\n              connection and try again.\"\n            />\n          ) : (\n            <>\n              <Header books={books} characters={characters} />\n              <InfiniteScroll\n                scrollThreshold={1}\n                dataLength={books.length}\n                next={handleFetchNextBooks}\n                hasMore={nextUrl ? true : false}\n                loader={!nextError && <NextLoading />}\n              >\n                <BookLists\n                  books={books}\n                  onTryAgain={handleFetchNextBooks}\n                  nextError={nextError}\n                />\n              </InfiniteScroll>\n            </>\n          )}\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}